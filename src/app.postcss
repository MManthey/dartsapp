/* place global styles here */

html,
body {
	@apply h-full;
}
tr:last-child {
	border-bottom: 0;
}
.ratings {
	width: fit-content;
}

.modal-transition {
	padding: 0px;
}

@keyframes rubberBand {
	0% {
		transform: scale3d(1, 1, 1);
	}
	30% {
		transform: scale3d(1.25, 0.75, 1);
	}
	40% {
		transform: scale3d(0.75, 1.25, 1);
	}
	50% {
		transform: scale3d(1.15, 0.85, 1);
	}
	65% {
		transform: scale3d(0.95, 1.05, 1);
	}
	75% {
		transform: scale3d(1.05, 0.95, 1);
	}
	100% {
		transform: scale3d(1, 1, 1);
	}
}

.rubberBand {
	animation: rubberBand 1.4s;
}

progress[value]::-webkit-progress-bar {
	color: #fff;
	background-color: #25d699;
}

progress[value]::-webkit-progress-value {
	background-color: white;
}

.input,
.textarea,
.select,
.input-group,
.border-surface-400-500-token {
	background-color: rgb(var(--color-surface-100));
}

.dark :is(.input, .textarea, .select, .input-group, .bg-surface-200-700-token) {
	background-color: rgb(var(--color-surface-800));
}

.lightswitch-track {
	background-color: rgb(var(--color-surface-50));
}

.lightswitch-track > div {
	background-color: rgb(var(--color-surface-900));
}

.lightswitch-track > div > svg {
	fill: rgb(var(--color-surface-100));
}

.dark .lightswitch-track {
	background-color: rgb(var(--color-surface-900));
}

.dark .lightswitch-track > div {
	background-color: rgb(var(--color-surface-50));
}

.dark .lightswitch-track > div > svg {
	fill: rgb(var(--color-surface-800));
}

.slide-toggle .slide-toggle-track.bg-surface-400 {
	background-color: rgb(var(--color-surface-200));
}

.dark .slide-toggle .slide-toggle-track.dark\:bg-surface-700 {
	background-color: rgb(var(--color-surface-700));
}

.btn.variant-ghost {
	background-color: rgb(var(--color-surface-100));
}

.dark .btn.variant-ghost {
	background-color: rgb(var(--color-surface-800));
}

.bg-surface-100 {
	background-color: rgb(var(--color-surface-100));
}

:is(.dark .dark\:bg-surface-800) {
	background-color: rgb(var(--color-surface-800));
}

.dark .card.bg-primary-500 {
	background-color: rgb(var(--color-primary-500));
}

.table tbody tr {
	border-color: rgb(var(--color-surface-400));
}

.border-t-surface-400 {
	border-color: rgb(var(--color-surface-400));
}

.imgIcon {
	width: 60px;
	height: 60px;
}

.trainingDivs {
	display: flex;
	box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.3);
	padding: 10px;
}

.trainingDivs p {
	margin: auto;
}

.infoIcon {
	margin-top:auto;
	margin-bottom: auto;
	margin-right: 10px;
	width: 25px;
	height: 25px;
}

.clickable {
    cursor: pointer;
}

.cricketScore {
	text-align: right;
}

.cricketGrids div {
	width: 50%;
	margin-right: 1em;
}

.cricketGrids {
	padding-bottom: 0.3em;
	margin-left: 0.5em;
	margin-right: 0.5em;
	border-radius: 7px;
}

.cricketGridsColorNorm {
	background: white;
	border: 1px solid #7ea193;
}

.cricketGridsColorNorm div {
	color: #7ea193;
}

.cricketGridsColorDone {
	background: #1b6544;
	border: 1px solid #1b6544;
}

.cricketGridsColorDone div {
	color: #93b2a2;
}

.cricketGridsColorDone div svg {
	fill: #93b2a2;
}

.cricketPopup {
	background: #6AD8A7;
	padding: 20px;
	border-radius: 5px;
	box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
	z-index: 1000; /* Damit das Modal über anderen Inhalten liegt */
}

.cricketScoreDiv {
	display: flex;
}

.cricketScoreDiv svg {
	margin: 1px;
	margin-top: 4px;
	fill: #7ea193;
}

.overlay {
	position: fixed;
	left: 0;
	right: 0;
	bottom: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	text-color: white;
}

.overlayCricket {
	top: 16em;
}

.overlayDouble {
	top: 23em;
}

.overlayZiel{
	top: 29.5em;
}

.overlay-content {
	margin-right: 1.5em;
	margin-left: 1.5em;
	position: absolute;
	background: #333333;
	padding: 20px;
	border-radius: 8px;
	text-align: center;
	z-index: 1000;
}

.close-button {
	margin-top: 10px;
}

.infoIcon {
	cursor: pointer;
}

.close-button {
	margin-top: 10px;
	cursor: pointer;
	border: none;
	background: none;
	color: 1b6543;
}

.textDiv {
	border: 1px solid #6d6d6d;
	text-align: center;
}

.redBtn {
	background-color: #ec5650;
	color: black;
}

/* Stellt sicher, dass der Container relativ positioniert ist */
.relative-container {
	position: relative;
}

/* Der Wrapper hält beide Bilder übereinander */
.image-wrapper {
	position: relative;
	width: 100%;
	height: auto;
}

/* Basisbild */
.base-image {
	display: block;
	width: 100%;
	height: auto;
}

/* Überlagerungsbild */
.overlay-image {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: auto;
	/* Optional: Transparenz hinzufügen */
	opacity: 0.8; /* Für einen leichten Überlappungseffekt */
}